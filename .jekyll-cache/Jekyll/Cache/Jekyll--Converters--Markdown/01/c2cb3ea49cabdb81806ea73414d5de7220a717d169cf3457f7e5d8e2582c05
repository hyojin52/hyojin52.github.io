I"q-<ul>
  <li>문제 유형: 스택-큐_LIFO-FIFO 자료형</li>
  <li>난이도: level_02 (약 4,755명 완료)</li>
  <li>사용 언어: C++ <br /><br /></li>
</ul>

<h2 id="1-문제">1. 문제</h2>
<h3 id="1-다리를-지나는-트럭">1) 다리를 지나는 트럭</h3>
<p>트럭 여러 대가 강을 가로지르는 일 차선 다리를 정해진 순으로 건너려 합니다. 모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 알아내야 합니다. 트럭은 1초에 1만큼 움직이며, 다리 길이는 bridge_length이고 다리는 무게 weight까지 견딥니다.<br />
※ 트럭이 다리에 완전히 오르지 않은 경우, 이 트럭의 무게는 고려하지 않습니다.<br /></p>

<p>예를 들어, 길이가 2이고 10kg 무게를 견디는 다리가 있습니다. 무게가 [7, 4, 5, 6]kg인 트럭이 순서대로 최단 시간 안에 다리를 건너려면 다음과 같이 건너야 합니다.<br /></p>
<table border="1" bordercolor="black" width="60%">
  <tr style="background-color:#e3e3e3">
    <th>경과 시간</th>
    <th>다리를 지난 트럭</th>
    <th>다리를 건너는 트럭</th>
    <th>대기 트럭</th>
  </tr>
  <tr>
    <td align="center">0</td>
    <td align="center">[]</td>
    <td align="center">[]</td>
    <td align="center">[7,4,5,6]</td>
  </tr>
  <tr>
    <td align="center">1~2</td>
    <td align="center">[]</td>
    <td align="center">[7]</td>
    <td align="center">[4,5,6]</td>
  </tr>
  <tr>
    <td align="center">3</td>
    <td align="center">[7]</td>
    <td align="center">[4]</td>
    <td align="center">[5,6]</td>
  </tr>
  <tr>
    <td align="center">4</td>
    <td align="center">[7]</td>
    <td align="center">[4,5]</td>
    <td align="center">[6]</td>
  </tr>
  <tr>
    <td align="center">5</td>
    <td align="center">[7,4]</td>
    <td align="center">[5]</td>
    <td align="center">[6]</td>
  </tr>
  <tr>
    <td align="center">6~7</td>
    <td align="center">[7,4,5]</td>
    <td align="center">[6]</td>
    <td align="center">[]</td>
  </tr>
  <tr>
    <td align="center">8</td>
    <td align="center">[7,4,5,6]</td>
    <td align="center">[]</td>
    <td align="center">[]</td>
  </tr>
</table>

<p>따라서, 모든 트럭이 다리를 지나려면 최소 8초가 걸립니다.<br /></p>

<p>solution 함수의 매개변수로 다리 길이 bridge_length, 다리가 견딜 수 있는 무게 weight, 트럭별 무게 truck_weights가 주어집니다. 이때 모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 return 하도록 solution 함수를 완성하세요.
<br /></p>

<h3 id="2-제한사항">2) 제한사항</h3>
<ul>
  <li>bridge_length는 1 이상 10,000 이하입니다.</li>
  <li>weight는 1 이상 10,000 이하입니다.</li>
  <li>truck_weights의 길이는 1 이상 10,000 이하입니다.</li>
  <li>모든 트럭의 무게는 1 이상 weight 이하입니다.</li>
</ul>

<h3 id="3-기본코드">3) 기본코드</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;string&gt;
#include &lt;vector&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">bridge_length</span><span class="p">,</span> <span class="kt">int</span> <span class="n">weight</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">truck_weights</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br /><br /></p>

<h2 id="2-알고리즘-생각해보자">2. 알고리즘! 생각해보자</h2>
<p>1) 문제처럼 다리 지나는 트럭(run_truck), 다리를 지난 트럭(ran_truck) 사용<br />
2) 모든 트럭이 다리를 지날 때(<code class="highlighter-rouge">ran_truck.size() == truck_weights.size()</code>)까지 아래를 반복</p>
<ul>
  <li>시간 1초씩 증가</li>
  <li>달리고 있는 트럭이 없으면, 트럭 추가</li>
  <li>달리고 있는 트럭이 있으면, 트럭 전진&amp;다리 전부 건넜는지 확인/트럭 더 추가할 수 있는지 확인</li>
</ul>

<p><br /><br /></p>

<h2 id="3-해결코드">3. 해결코드</h2>
<p>[C++]<br /></p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;string&gt;
#include &lt;vector&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">bridge_length</span><span class="p">,</span> <span class="kt">int</span> <span class="n">weight</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">truck_weights</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">run_truck</span><span class="p">,</span> <span class="n">ran_truck</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">now_weight</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>

    <span class="c1">//1. 트럭이 모두 지나면 answer(시간) count 멈추기</span>
    <span class="k">while</span><span class="p">(</span><span class="n">ran_truck</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">!=</span> <span class="n">truck_weights</span><span class="p">.</span><span class="n">size</span><span class="p">()){</span>
        <span class="c1">//1-1.반복문 돌때마다 시간 1초 증가</span>
        <span class="n">answer</span><span class="o">++</span><span class="p">;</span>

        <span class="c1">//1-2.달리고 있는 트럭이 없으면, 트럭 추가</span>
        <span class="k">if</span><span class="p">(</span><span class="n">run_truck</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
            <span class="n">now_weight</span> <span class="o">+=</span> <span class="n">truck_weights</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span> <span class="o">!=</span> <span class="n">truck_weights</span><span class="p">.</span><span class="n">size</span><span class="p">())</span> <span class="n">i</span><span class="o">++</span><span class="p">;</span>
            <span class="n">run_truck</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="c1">//1-3.달리고 있는 트럭이 있으면,</span>
        <span class="k">else</span><span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">run_truck</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">j</span><span class="o">++</span><span class="p">){</span>
                <span class="c1">//1-3-1.트럭 1만큼 전진</span>
                <span class="n">run_truck</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
                <span class="c1">//1-3-2.달리고 있는 트럭 다리 건넜는지 확인</span>
                <span class="k">if</span><span class="p">(</span><span class="n">run_truck</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="n">bridge_length</span><span class="p">){</span>
                    <span class="n">run_truck</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">run_truck</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="n">j</span><span class="p">);</span>
                    <span class="n">j</span><span class="o">--</span><span class="p">;</span>
                    <span class="n">ran_truck</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">truck_weights</span><span class="p">[</span><span class="n">ran_truck</span><span class="p">.</span><span class="n">size</span><span class="p">()]);</span>
                    <span class="n">now_weight</span> <span class="o">-=</span> <span class="n">truck_weights</span><span class="p">[</span><span class="n">ran_truck</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
                <span class="p">}</span>


            <span class="p">}</span>

            <span class="c1">//1-3-3.트럭 더 추가할 수 있는지 확인</span>
            <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">&lt;</span><span class="n">truck_weights</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="n">now_weight</span><span class="o">+</span><span class="n">truck_weights</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="n">weight</span><span class="p">){</span>
                <span class="n">now_weight</span> <span class="o">+=</span> <span class="n">truck_weights</span><span class="p">[</span><span class="n">i</span><span class="o">++</span><span class="p">];</span>
                <span class="n">run_truck</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br /><br /></p>

<h2 id="4-문제해결능력-up-되짚어보기">4. 문제해결능력 UP! 되짚어보기</h2>
<ul>
  <li>이것이 과연 스택-큐 문제인가… 내가 잘못된 방향으로 푼것인가… <strong>“스택-큐”</strong> 사용해서도 풀어보자!</li>
</ul>

<p><br /><br /></p>

<h2 id="5-references">5. References</h2>
<p>1) 공식 C++ References (<a href="https://modoocode.com/241">https://modoocode.com/241</a>)
<br /><br /></p>
:ET