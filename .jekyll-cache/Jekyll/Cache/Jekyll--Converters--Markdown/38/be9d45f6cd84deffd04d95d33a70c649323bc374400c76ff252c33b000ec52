I"> <ul>
  <li>문제 유형: 힙_검색에 특화된 자료구조</li>
  <li>난이도: level_02 (약 1,902명 완료)</li>
  <li>사용 언어: C++ <br /><br /></li>
</ul>

<h2 id="1-문제">1. 문제</h2>
<h3 id="1-라면공장">1) 라면공장</h3>

<p><br /></p>

<h3 id="2-제한사항">2) 제한사항</h3>
<ul>
  <li>scoville의 길이는 1 이상 1,000,000 이하입니다.</li>
  <li>K는 0 이상 1,000,000,000 이하입니다.</li>
  <li>scoville의 원소는 각각 0 이상 1,000,000 이하입니다.</li>
  <li>모든 음식의 스코빌 지수를 K 이상으로 만들 수 없는 경우에는 -1을 return 합니다.</li>
</ul>

<h3 id="3-기본코드">3) 기본코드</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;string&gt;
#include &lt;vector&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="kt">int</span> <span class="n">stock</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">dates</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">supplies</span><span class="p">,</span> <span class="kt">int</span> <span class="n">k</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br /><br /></p>

<h2 id="2-알고리즘-생각해보자">2. 알고리즘! 생각해보자</h2>
<p>min heap 사용해서 제일 낮은 맵기인 음식 찾아서 새로운 읍식 만들기<br />
1) min heap 생성<br />
2) 스코빌 지수가 “K 미만”이라면 아래를 반복</p>
<ul>
  <li>스코빌지수 가장 낮은 두 개 음식 섞어 새로운 음식 만들기</li>
  <li>새로운 음식 추가</li>
</ul>

<p>3) K이상의 스코빌 지수를 만들 수 없다면, -1 제작
<br /><br /></p>

<h2 id="3-해결코드">3. 해결코드</h2>
<p>[C++]<br /></p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;string&gt;
#include &lt;vector&gt;
#include &lt;algorithm&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">scoville</span><span class="p">,</span> <span class="kt">int</span> <span class="n">K</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">scoville</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>

    <span class="c1">//1.min heap 만들기</span>
    <span class="n">make_heap</span><span class="p">(</span><span class="n">scoville</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">scoville</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">greater</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">());</span>

    <span class="c1">//2.스코빌 지수가 "K 미만"이라면 아래를 반복</span>
    <span class="kt">int</span> <span class="n">new_food</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="n">scoville</span><span class="p">.</span><span class="n">front</span><span class="p">()</span> <span class="o">&lt;</span> <span class="n">K</span> <span class="o">&amp;&amp;</span> <span class="n">scoville</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">){</span>

        <span class="c1">//2-1.스코빌지수 가장 낮은 두 개 음식 섞어 새로운 음식 만들기</span>
        <span class="n">pop_heap</span><span class="p">(</span><span class="n">scoville</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">scoville</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">greater</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">());</span>        
        <span class="n">new_food</span> <span class="o">=</span> <span class="n">scoville</span><span class="p">.</span><span class="n">back</span><span class="p">();</span>
        <span class="n">scoville</span><span class="p">.</span><span class="n">pop_back</span><span class="p">();</span>
        <span class="n">pop_heap</span><span class="p">(</span><span class="n">scoville</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">scoville</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">greater</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">());</span>        
        <span class="n">new_food</span> <span class="o">+=</span> <span class="n">scoville</span><span class="p">.</span><span class="n">back</span><span class="p">()</span><span class="o">*</span><span class="mi">2</span><span class="p">;</span>
        <span class="n">scoville</span><span class="p">.</span><span class="n">pop_back</span><span class="p">();</span>

        <span class="c1">//2-2. 새로운 음식 추가</span>
        <span class="n">scoville</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">new_food</span><span class="p">);</span>
        <span class="n">push_heap</span><span class="p">(</span><span class="n">scoville</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">scoville</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">greater</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">());</span>
    <span class="p">}</span>

    <span class="k">if</span><span class="p">(</span><span class="n">scoville</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&lt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">scoville</span><span class="p">.</span><span class="n">front</span><span class="p">()</span> <span class="o">&lt;</span> <span class="n">K</span><span class="p">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
    <span class="k">else</span> <span class="n">answer</span> <span class="o">-=</span> <span class="n">scoville</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>

    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br /><br /></p>

<h2 id="4-문제해결능력-up-되짚어보기">4. 문제해결능력 UP! 되짚어보기</h2>
<p>-
<br /><br /></p>

<h2 id="5-references">5. References</h2>
<p>1) Heap 개념 (<a href="https://reakwon.tistory.com/42">https://reakwon.tistory.com/42</a>)
2) C++ Heap 구현 (<a href="https://twpower.github.io/137-heap-implementation-in-cp">https://twpower.github.io/137-heap-implementation-in-cp</a>)
3) C++ heap과 관련된 함수 (<a href="https://openmynotepad.tistory.com/35">https://openmynotepad.tistory.com/35</a>)
2) 공식 C++ References (<a href="https://modoocode.com/241">https://modoocode.com/241</a>)
<br /><br /></p>
:ET