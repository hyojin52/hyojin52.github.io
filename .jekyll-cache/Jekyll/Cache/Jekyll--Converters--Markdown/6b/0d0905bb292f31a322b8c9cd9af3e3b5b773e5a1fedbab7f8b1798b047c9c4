I"*5<ul>
  <li>문제 유형: 정렬_자료를 일정한 규칙에 따라 나열하는 것</li>
  <li>난이도: level_01 (약 13529명 완료)</li>
  <li>사용 언어: C++ <br /><br /></li>
</ul>

<h2 id="1-문제">1. 문제</h2>
<h3 id="1-k번째수">1) K번째수</h3>

<p>배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다.<br />
예를 들어 array가 [1, 5, 2, 6, 3, 7, 4], i = 2, j = 5, k = 3이라면<br /></p>
<ul>
  <li>array의 2번째부터 5번째까지 자르면 [5, 2, 6, 3]입니다.<br /></li>
  <li>1에서 나온 배열을 정렬하면 [2, 3, 5, 6]입니다.<br /></li>
  <li>2에서 나온 배열의 3번째 숫자는 5입니다.</li>
</ul>

<p>배열 array, [i, j, k]를 원소로 가진 2차원 배열 commands가 매개변수로 주어질 때, commands의 모든 원소에 대해 앞서 설명한 연산을 적용했을 때 나온 결과를 배열에 담아 return 하도록 solution 함수를 작성해주세요. <br />
<br /><br /></p>

<h3 id="2-제한사항">2) 제한사항</h3>

<ul>
  <li>마라톤 경기에 참여한 선수의 수는 1명 이상 100,000명 이하입니다.<br /></li>
  <li>길이는 participant의 길이보다 1 작습니다.<br /></li>
  <li>참가자의 이름은 1개 이상 20개 이하의 알파벳 소문자로 이루어져 있습니다.<br /></li>
  <li>참가자 중에는 동명이인이 있을 수 있습니다.<br /></li>
</ul>

<h3 id="3-기본코드">3) 기본코드</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;string&gt;
#include &lt;vector&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">participant</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">completion</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">string</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br /></p>

<h2 id="2-알고리즘-생각해보자">2. 알고리즘! 생각해보자</h2>
<p>1) participant와 completion에 담긴 이름을 모두 비교한다. (반복문)</p>
<ul>
  <li>participant와 completion에 모두 이름이 있다면, 해당 이름을 participant와 completion에서 삭제한다.</li>
  <li>그렇지 않다면, 반복문 continue</li>
</ul>

<p>2) participant에 남아있는 이름을 answer에 추가하여 return
<br /><br /></p>

<h2 id="3-해결코드">3. 해결코드</h2>
<p>[C++]<br /></p>

<p>1) 초반코드(정확성_통과, 효율성_실패)</p>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;string&gt;
#include &lt;vector&gt;
#include &lt;iostream&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">participant</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">completion</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">string</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>

    <span class="kt">int</span> <span class="n">p_id</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">c_id</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="k">for</span><span class="p">(</span><span class="n">p_id</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">p_id</span><span class="o">&lt;</span><span class="n">participant</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">p_id</span><span class="o">++</span><span class="p">){</span>
        <span class="k">for</span><span class="p">(</span><span class="n">c_id</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">c_id</span><span class="o">&lt;</span><span class="n">completion</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">c_id</span><span class="o">++</span><span class="p">){</span>
            <span class="k">if</span><span class="p">(</span><span class="n">participant</span><span class="p">[</span><span class="n">p_id</span><span class="p">].</span><span class="n">compare</span><span class="p">(</span><span class="n">completion</span><span class="p">[</span><span class="n">c_id</span><span class="p">])</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
                <span class="n">participant</span><span class="p">[</span><span class="n">p_id</span><span class="p">]</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
                <span class="n">completion</span><span class="p">[</span><span class="n">c_id</span><span class="p">]</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>        
    <span class="p">}</span>

    <span class="k">for</span><span class="p">(</span><span class="n">p_id</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">p_id</span><span class="o">&lt;</span><span class="n">participant</span><span class="p">.</span><span class="n">size</span><span class="p">();</span><span class="n">p_id</span><span class="o">++</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span><span class="n">participant</span><span class="p">[</span><span class="n">p_id</span><span class="p">].</span><span class="n">compare</span><span class="p">(</span><span class="s">""</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">){</span>
            <span class="n">answer</span><span class="p">.</span><span class="n">assign</span><span class="p">(</span><span class="n">participant</span><span class="p">[</span><span class="n">p_id</span><span class="p">]);</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p>아래와 같은 <strong>문제점</strong> 이 있음을 발견했다.<br /></p>
<ul>
  <li>문제의 주제인 <u>해시</u> 개념 미사용</li>
  <li>다중 반복문 사용으로 <u>효율성</u>이 떨어짐</li>
</ul>

<p>문제점을 보완하여 다음과 같이 map 자료형을 이용하여 수정해보았다.<br /></p>

<p>2) 수정코드(정확성_통과, 효율성_통과)</p>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;string&gt;
#include &lt;vector&gt;
#include &lt;map&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">participant</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">completion</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">string</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>

    <span class="n">map</span><span class="o">&lt;</span><span class="n">string</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="n">temp</span><span class="p">;</span>

    <span class="c1">//1.map 초기화</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">participant</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="c1">//1-1.key = participant에 담긴 이름, value = participant에 담긴 이름의 횟수</span>
        <span class="k">if</span><span class="p">(</span><span class="n">temp</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="n">participant</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
            <span class="n">temp</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">pair</span><span class="o">&lt;</span><span class="n">string</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span><span class="p">(</span><span class="n">participant</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="mi">1</span><span class="p">));</span>
        <span class="k">else</span>
            <span class="p">(</span><span class="n">temp</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">participant</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="o">-&gt;</span><span class="n">second</span><span class="p">)</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">//2.tmep와 completion 비교</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">completion</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="c1">//2-1.completion 명단에 있다면 횟수 줄이기</span>
        <span class="p">(</span><span class="n">temp</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">completion</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="o">-&gt;</span><span class="n">second</span><span class="p">)</span><span class="o">--</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">//3. temp 확인하여 answer 도출</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">participant</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span><span class="n">temp</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">participant</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="o">-&gt;</span><span class="n">second</span> <span class="o">&gt;=</span> <span class="mi">1</span><span class="p">)</span>
            <span class="n">answer</span> <span class="o">=</span> <span class="n">participant</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br /></p>

<h2 id="4-문제해결능력-up-되짚어보기">4. 문제해결능력 UP! 되짚어보기</h2>
<ul>
  <li>효율성을 높일 수 있도록 문제에 알맞은 자료형 선택하기</li>
  <li>map, set, unordered_map, unordered_set의 차이점</li>
  <li>다양한 풀이법(정렬&amp;비교 방법, multiset 자료형 이용 등)
<br /><br /></li>
</ul>

<h2 id="5-references">5. References</h2>
<p>1) vector 사용법 (<a href="https://blockdmask.tistory.com/70">https://blockdmask.tistory.com/70</a>)<br />
2) map 사용법 (<a href="https://blockdmask.tistory.com/87">https://blockdmask.tistory.com/87</a>)<br />
3) 공식 C++ References (<a href="https://modoocode.com/241">https://modoocode.com/241</a>)
<br /><br /></p>
:ET