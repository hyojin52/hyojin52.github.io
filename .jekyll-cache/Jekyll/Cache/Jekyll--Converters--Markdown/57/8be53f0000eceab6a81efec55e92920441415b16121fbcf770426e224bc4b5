I"A/<ul>
  <li>문제 유형: 스택-큐_LIFO-FIFO 자료형</li>
  <li>난이도: level_02 (약 6,210명 완료)</li>
  <li>사용 언어: C++ <br /><br /></li>
</ul>

<h2 id="1-문제">1. 문제</h2>
<h3 id="1-프린터">1) 프린터</h3>
<p>일반적인 프린터는 인쇄 요청이 들어온 순서대로 인쇄합니다. 그렇기 때문에 중요한 문서가 나중에 인쇄될 수 있습니다. 이런 문제를 보완하기 위해 중요도가 높은 문서를 먼저 인쇄하는 프린터를 개발했습니다. 이 새롭게 개발한 프린터는 아래와 같은 방식으로 인쇄 작업을 수행합니다.<br /></p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. 인쇄 대기목록의 가장 앞에 있는 문서(J)를 대기목록에서 꺼냅니다.
2. 나머지 인쇄 대기목록에서 J보다 중요도가 높은 문서가 한 개라도 존재하면 J를 대기목록의 가장 마지막에 넣습니다.
3. 그렇지 않으면 J를 인쇄합니다.
</code></pre></div></div>
<p>예를 들어, 4개의 문서(A, B, C, D)가 순서대로 인쇄 대기목록에 있고 중요도가 2 1 3 2 라면 C D A B 순으로 인쇄하게 됩니다. 내가 인쇄를 요청한 문서가 몇 번째로 인쇄되는지 알고 싶습니다. 위의 예에서 C는 1번째로, A는 3번째로 인쇄됩니다.<br /></p>

<p>현재 대기목록에 있는 문서의 중요도가 순서대로 담긴 배열 priorities와 내가 인쇄를 요청한 문서가 현재 대기목록의 어떤 위치에 있는지를 알려주는 location이 매개변수로 주어질 때, 내가 인쇄를 요청한 문서가 몇 번째로 인쇄되는지 return 하도록 solution 함수를 작성해주세요.
<br /></p>

<h3 id="2-제한사항">2) 제한사항</h3>
<ul>
  <li>현재 대기목록에는 1개 이상 100개 이하의 문서가 있습니다.</li>
  <li>인쇄 작업의 중요도는 1~9로 표현하며 숫자가 클수록 중요하다는 뜻입니다.</li>
  <li>location은 0 이상 (현재 대기목록에 있는 작업 수 - 1) 이하의 값을 가지며 대기목록의 가장 앞에 있으면 0, 두 번째에 있으면 1로 표현합니다.</li>
</ul>

<h3 id="3-기본코드">3) 기본코드</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;string&gt;
#include &lt;vector&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">priorities</span><span class="p">,</span> <span class="kt">int</span> <span class="n">location</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br /><br /></p>

<h2 id="2-알고리즘-생각해보자">2. 알고리즘! 생각해보자</h2>
<p>1) 각 문서가 몇 번째에 출력되는지 계산 =&gt; priorities 자체를 변경하기 보다 <u>다른 공간</u>(:: <code class="highlighter-rouge">vector&lt;int&gt; document;</code>)을 사용하자!</p>
<ul>
  <li>priorities와 document의 관계 : document에 priorities의 index 저장 -&gt; document 통해서 priorities 접근!</li>
  <li>ex) priorities[0] == priorities[document[0]]</li>
</ul>

<div style="width:50%;float:left;block:inline-block;padding-left:20px;">
  priorities
  <table border="1" bordercolor="black" width="60%">
    <tr>
      <th style="background-color:#e3e3e3;font-size:13px;padding:5px;">index</th>
      <td align="center" style="padding:5px;">0</td>
      <td align="center" style="padding:5px;">1</td>
      <td align="center" style="padding:5px;">2</td>
      <td align="center" style="padding:5px;">3</td>      
    </tr>
    <tr>
      <th style="background-color:#e3e3e3;font-size:13px;padding:5px;">value<br />(priority)</th>
      <td align="center" style="padding:5px;">2</td>
      <td align="center" style="padding:5px;">1</td>
      <td align="center" style="padding:5px;">3</td>
      <td align="center" style="padding:5px;">2</td>
    </tr>
  </table>
</div>
<div style="width:50%;float:left;block:inline-block;">  
  document
  <table border="1" bordercolor="black" width="60%">
    <tr>
      <th style="background-color:#e3e3e3;font-size:13px;padding:5px;">index</th>
      <td align="center" style="padding:5px;">0</td>
      <td align="center" style="padding:5px;">1</td>
      <td align="center" style="padding:5px;">2</td>
      <td align="center" style="padding:5px;">3</td>      
    </tr>
    <tr>
      <th style="background-color:#e3e3e3;font-size:13px;padding:5px;">value<br />(priority)</th>
      <td align="center" style="padding:5px;">0</td>
      <td align="center" style="padding:5px;">1</td>
      <td align="center" style="padding:5px;">2</td>
      <td align="center" style="padding:5px;">3</td>
    </tr>
  </table>
</div>
<ul style="color:white;"><ol>white space</ol></ul>

<p>2) location에 있는 문서가 출력될 때까지 <u>"아래" 반복</u></p>
<ul>
  <li>location에 있는 문서가 출력되면 stop</li>
  <li>우선순위가 더 높은 문서가 있다면, 맨 뒤로 보내기</li>
  <li>우선순위가 더 높은 문서가 없다면(=자신이 우선순위가 제일 높다면), 출력&amp;최고 우선순위 저장</li>
</ul>

<p><br /><br /></p>

<h2 id="3-해결코드">3. 해결코드</h2>
<p>[C++]<br /></p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;string&gt;
#include &lt;vector&gt;
#include &lt;algorithm&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">priorities</span><span class="p">,</span> <span class="kt">int</span> <span class="n">location</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">document</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">max</span><span class="p">;</span>

    <span class="c1">//1-1.document 초기화</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">priorities</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="n">document</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="c1">//1-2.가장 높은 우선순위 저장</span>
    <span class="n">max</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="n">max_element</span><span class="p">(</span><span class="n">priorities</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">priorities</span><span class="p">.</span><span class="n">end</span><span class="p">()));</span>

    <span class="c1">//2.location 위치에 있는 문서가 출력될 때까지 반복</span>
    <span class="k">while</span><span class="p">(</span><span class="nb">true</span><span class="p">){</span>

        <span class="c1">//2-1.location에 있는 문서가 출력되면 stop</span>
        <span class="k">if</span><span class="p">(</span><span class="n">document</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="n">location</span> <span class="o">&amp;&amp;</span> <span class="n">priorities</span><span class="p">[</span><span class="n">document</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span> <span class="o">==</span> <span class="n">max</span><span class="p">){</span>
            <span class="n">answer</span><span class="o">++</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="c1">//2-2.우선순위 더 높은 것 있으면 뒤로 보내기</span>
        <span class="k">if</span><span class="p">(</span><span class="n">priorities</span><span class="p">[</span><span class="n">document</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span><span class="o">&lt;</span><span class="n">max</span><span class="p">){</span>
            <span class="n">document</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">document</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
            <span class="n">document</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">document</span><span class="p">.</span><span class="n">begin</span><span class="p">());</span>
        <span class="p">}</span>
        <span class="c1">//2-3.그렇지 않으면 출력</span>
        <span class="k">else</span><span class="p">{</span>
            <span class="n">document</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">document</span><span class="p">.</span><span class="n">begin</span><span class="p">());</span>
            <span class="n">answer</span><span class="o">++</span><span class="p">;</span>

            <span class="c1">//2-5.max 우선순위 저장</span>
            <span class="n">max</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">document</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
                <span class="k">if</span><span class="p">(</span><span class="n">max</span><span class="o">&lt;</span><span class="n">priorities</span><span class="p">[</span><span class="n">document</span><span class="p">[</span><span class="n">i</span><span class="p">]]){</span>
                    <span class="n">max</span> <span class="o">=</span> <span class="n">priorities</span><span class="p">[</span><span class="n">document</span><span class="p">[</span><span class="n">i</span><span class="p">]];</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br /><br /></p>

<h2 id="4-문제해결능력-up-되짚어보기">4. 문제해결능력 UP! 되짚어보기</h2>
<ul>
  <li>vector에서 front()와 back() 적극사용 =&gt; 큐 개념 명확히 명시 가능</li>
</ul>

<p><br /><br /></p>

<h2 id="5-references">5. References</h2>
<p>1) 공식 C++ References (<a href="https://modoocode.com/241">https://modoocode.com/241</a>)
<br /><br /></p>
:ET