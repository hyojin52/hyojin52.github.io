I"n$<ul>
  <li>문제 유형: 정렬_자료를 일정한 규칙에 따라 나열하는 것</li>
  <li>난이도: level_01 (약 13529명 완료)</li>
  <li>사용 언어: C++ <br /><br /></li>
</ul>

<h2 id="1-문제">1. 문제</h2>
<h3 id="1-k번째수">1) K번째수</h3>

<p>배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다.<br />
예를 들어 array가 [1, 5, 2, 6, 3, 7, 4], i = 2, j = 5, k = 3이라면<br /></p>
<ul>
  <li>array의 2번째부터 5번째까지 자르면 [5, 2, 6, 3]입니다.<br /></li>
  <li>1에서 나온 배열을 정렬하면 [2, 3, 5, 6]입니다.<br /></li>
  <li>2에서 나온 배열의 3번째 숫자는 5입니다.</li>
</ul>

<p>배열 array, [i, j, k]를 원소로 가진 2차원 배열 commands가 매개변수로 주어질 때, commands의 모든 원소에 대해 앞서 설명한 연산을 적용했을 때 나온 결과를 배열에 담아 return 하도록 solution 함수를 작성해주세요.</p>

<h3 id="2-제한사항">2) 제한사항</h3>
<ul>
  <li>array의 길이는 1 이상 100 이하입니다.</li>
  <li>array의 각 원소는 1 이상 100 이하입니다.</li>
  <li>commands의 길이는 1 이상 50 이하입니다.</li>
  <li>commands의 각 원소는 길이가 3입니다.</li>
</ul>

<h3 id="3-기본코드">3) 기본코드</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;string&gt;
#include &lt;vector&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">array</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">commands</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br /></p>

<h2 id="2-알고리즘-생각해보자">2. 알고리즘! 생각해보자</h2>
<p>1) 배열 array의 i번째부터 j번째까지 잘라 sub_arr에 저장</p>
<ul>
  <li>i==j인 경우, array[i] 번째 값 sub_arr에 저장</li>
  <li>이외의 경우, i번째부터 j번째까지 복사해서 sub_arr에 저장</li>
</ul>

<p>2) sub_arr 정렬하기</p>
<ul>
  <li>단, “i==j인 경우”에는 sub_arr내의 원소가 한 개뿐이므로 정렬이 필요하지 않음</li>
</ul>

<p>3) k번째 숫자 return
<br /><br /></p>

<h2 id="3-해결코드">3. 해결코드</h2>
<p>[C++]<br /></p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;string&gt;
#include &lt;vector&gt;
#include &lt;algorithm&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">solution</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">array</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">commands</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">answer</span><span class="p">;</span>

    <span class="kt">int</span> <span class="n">length</span><span class="p">;</span>

    <span class="c1">//1.배열 array의 i번째부터 j번째까지 잘라 sub_arr에 저장</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">commands</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">sub_arr</span><span class="p">;</span>

        <span class="c1">//1-1.i==j인 경우, array[i] 번째 값 sub_arr에 저장</span>
        <span class="k">if</span><span class="p">(</span><span class="n">commands</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">commands</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]){</span>
            <span class="n">sub_arr</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">array</span><span class="p">[</span><span class="n">commands</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">]);</span>
        <span class="p">}</span>
        <span class="c1">//1-2.이외의 경우, i번째부터 j번째까지 복사해서 sub_arr에 저장</span>
        <span class="k">else</span> <span class="p">{</span>
            <span class="n">length</span> <span class="o">=</span> <span class="n">commands</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="n">commands</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
            <span class="n">sub_arr</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="n">length</span><span class="p">);</span>
            <span class="n">copy</span><span class="p">(</span><span class="n">array</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="n">commands</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">array</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="n">commands</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span> <span class="n">sub_arr</span><span class="p">.</span><span class="n">begin</span><span class="p">());</span>

            <span class="c1">//2.sub_arr 정렬</span>
            <span class="n">sort</span><span class="p">(</span><span class="n">sub_arr</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">sub_arr</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
        <span class="p">}</span>

        <span class="c1">//3. k번째 숫자 return</span>
        <span class="n">answer</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">sub_arr</span><span class="p">[</span><span class="n">commands</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">]);</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br /></p>

<h2 id="4-문제해결능력-up-되짚어보기">4. 문제해결능력 UP! 되짚어보기</h2>
<ul>
  <li>
    <p>vector 자료형 사용시, copy()와 assign() 차이점</p>

    <p>- <strong>copy</strong> : vector의 <u>"size"</u>가 미리 할당 되어야 사용가능 <br />
- <strong>assign</strong> : size가 할당되어 있지 않아도 사용 가능</p>
  </li>
</ul>

<p><br /><br /></p>

<h2 id="5-references">5. References</h2>
<p>1) vector 사용법 (<a href="https://blockdmask.tistory.com/70">https://blockdmask.tistory.com/70</a>)<br />
2) map 사용법 (<a href="https://blockdmask.tistory.com/87">https://blockdmask.tistory.com/87</a>)<br />
3) 공식 C++ References (<a href="https://modoocode.com/241">https://modoocode.com/241</a>)
<br /><br /></p>
:ET