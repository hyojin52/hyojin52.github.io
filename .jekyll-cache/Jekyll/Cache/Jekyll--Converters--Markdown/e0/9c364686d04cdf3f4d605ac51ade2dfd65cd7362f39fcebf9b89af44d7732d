I"I<ul>
  <li>문제 유형: Greedy_부분 최적해가 전체 최적해가 되는 알고리즘</li>
  <li>난이도: level_02 (약 2,169명 완료)</li>
  <li>사용 언어: C++ <br /><br /></li>
</ul>

<h2 id="1-문제">1. 문제</h2>
<h3 id="1-큰-수-만들기">1) 큰 수 만들기</h3>
<p>어떤 숫자에서 k개의 수를 제거했을 때 얻을 수 있는 가장 큰 숫자를 구하려 합니다. 예를 들어, 숫자 1924에서 수 두 개를 제거하면 [19, 12, 14, 92, 94, 24] 를 만들 수 있습니다. 이 중 가장 큰 숫자는 94 입니다.<br /></p>

<p>문자열 형식으로 숫자 number와 제거할 수의 개수 k가 solution 함수의 매개변수로 주어집니다. number에서 k 개의 수를 제거했을 때 만들 수 있는 수 중 가장 큰 숫자를 문자열 형태로 return 하도록 solution 함수를 완성하세요.
<br /></p>

<h3 id="2-제한사항">2) 제한사항</h3>
<ul>
  <li>number는 1자리 이상, 1,000,000자리 이하인 숫자입니다.</li>
  <li>k는 1 이상 number의 자릿수 미만인 자연수입니다.</li>
</ul>

<h3 id="3-기본코드">3) 기본코드</h3>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;string&gt;
#include &lt;vector&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="n">string</span> <span class="n">number</span><span class="p">,</span> <span class="kt">int</span> <span class="n">k</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">string</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br /><br /></p>

<h2 id="2-알고리즘-생각해보자">2. 알고리즘! 생각해보자</h2>
<p>Greedy -&gt; 비교가 중요 -&gt; (해당 문제) <u>숫자 크기 비교</u> =&gt; 가장 큰 수 찾기<br />
THEN.. 가장 큰 수 찾기 위한 “숫자 비교 범위”는? <strong>“k+1”</strong> <br /></p>

<p>1) 범위 내에서 가장 큰 수 찾기<br />
2) 가장 큰 수 이전 숫자는 제거(동시에 <code class="highlighter-rouge">k--</code>), 가장 큰 수는 answer에 append<br />
3) 찾은 가장 큰 수 다음 수부터 범위 내에서 가장 큰 수 찾는 것 반복<br /></p>

<p>number를 모두 비교하지 않았는데 k개를 모두 제거한 경우, <strong>answer의 size</strong> 확인<br />
예외처리 1. answer.size() == <u>number.size()-k</u> -&gt; break<br />
예외처리 2. answer.size() &lt; number.size()-k** -&gt; number에서 비교되지 않은 남은 수들을 그대로 concat</p>

<p><br /><br /></p>

<h2 id="3-해결코드">3. 해결코드</h2>
<p>[C++]<br /></p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;string&gt;
#include &lt;vector&gt;
#include &lt;algorithm&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">string</span> <span class="nf">solution</span><span class="p">(</span><span class="n">string</span> <span class="n">number</span><span class="p">,</span> <span class="kt">int</span> <span class="n">k</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">string</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>

    <span class="kt">int</span> <span class="n">range_start</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">range_end</span> <span class="o">=</span> <span class="n">k</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">range</span> <span class="o">=</span> <span class="n">number</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">-</span><span class="n">k</span><span class="p">;</span>
    <span class="kt">char</span> <span class="n">largest</span><span class="p">;</span>

    <span class="c1">//1.삭제할 수 남아있으면 반복</span>
    <span class="k">while</span><span class="p">(</span><span class="n">k</span><span class="p">){</span>
        <span class="c1">//2.가장 큰 수 찾기</span>
        <span class="c1">//(예외처리 1)</span>
        <span class="k">if</span><span class="p">(</span><span class="n">answer</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">!=</span> <span class="n">range</span><span class="p">)</span> <span class="n">largest</span> <span class="o">=</span> <span class="o">*</span><span class="n">max_element</span><span class="p">(</span><span class="n">number</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="n">range_start</span><span class="p">,</span> <span class="n">number</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="n">range_end</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
        <span class="k">else</span> <span class="k">break</span><span class="p">;</span>

        <span class="k">while</span><span class="p">(</span><span class="n">largest</span><span class="o">!=</span><span class="n">number</span><span class="p">[</span><span class="n">range_start</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="n">k</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span>
            <span class="n">k</span><span class="o">--</span><span class="p">;</span>
            <span class="n">range_start</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">answer</span> <span class="o">+=</span> <span class="n">number</span><span class="p">[</span><span class="n">range_start</span><span class="p">];</span>

        <span class="n">range_start</span><span class="o">++</span><span class="p">;</span>
        <span class="n">range_end</span> <span class="o">=</span> <span class="n">range_start</span><span class="o">+</span><span class="n">k</span><span class="p">;</span>  
    <span class="p">}</span>

    <span class="c1">//(예외처리 2)</span>
    <span class="k">if</span><span class="p">(</span><span class="n">answer</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">!=</span> <span class="n">range</span><span class="p">){</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">range_start</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">number</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
            <span class="n">answer</span> <span class="o">+=</span> <span class="n">number</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br /><br /></p>

<h2 id="4-문제해결능력-up-되짚어보기">4. 문제해결능력 UP! 되짚어보기</h2>
<ul>
  <li>distance 사용한 문제해결 방법 고민해보기</li>
</ul>

<p><br /><br /></p>

<h2 id="5-references">5. References</h2>
<p>1) <a href="https://modoocode.com/241">공식 C++ Reference</a>
<br /><br /></p>
:ET